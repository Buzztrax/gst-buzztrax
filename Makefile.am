## Process this file with automake to produce Makefile.in

all:
	@echo "*"
	@echo "* This module has been discontinued and merged into buzztrax!"
	@echo "*"
	@exit 1

SUBDIRS = 
# see fake subdir rules
FAKE_SUBDIRS = \
  docs/reference
DIST_SUBDIRS = $(SUBDIRS) $(FAKE_SUBDIRS)

ACLOCAL_AMFLAGS = -I m4
DISTCHECK_CONFIGURE_FLAGS = --enable-gtk-doc

EXTRA_DIST = \
	libgstbuzztrax.pc.in \
	README.md TODO

# BUILT_SOURCES is for generated source
BUILT_SOURCES = builddirs
	
# CLEANFILES is for files generated by make
CLEANFILES = $(pkgconfig_DATA)

noinst_HEADERS =

include $(top_srcdir)/Makefile.lib.am
include $(top_srcdir)/Makefile.src.am
include $(top_srcdir)/Makefile.tests.am

#-- orc

ORC_SOURCE = src/bml/gstbmlorc
include $(top_srcdir)/orc.mak

#-- pkg config

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libgstbuzztrax.pc

#-- fake subdir rules

docs: docs-reference 

docs-reference: libgstbuzztrax.la libgstaudiodelay.la libgstsimsyn.la
	@$(MAKE) -C docs/reference

all-local: docs

check-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir check; done

clean-local:
	@for dir in $(FAKE_SUBDIRS); do \
	  if test -f $$dir/Makefile; then \
	    $(MAKE) -C $$dir clean; \
	  fi; \
	done	

install-data-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir install-data; done

uninstall-local:
	@for dir in $(FAKE_SUBDIRS); do $(MAKE) -C $$dir uninstall; done

builddirs:
	$(AM_V_at)$(MKDIR_P) src/bml/

AUTHORS::
	$(AM_V_GEN)if test -d "$(srcdir)/.git"; \
	then \
		( cd "$(top_srcdir)" && \
		  git log --no-merges --pretty=format:"%an <%ae>" . | \
		  sed -e 's/sourceforge.net/sf.net/' \
		      -e 's/\(Joseph Orbegoso Pea <joseph.pea@climate.com>\|trusktr <trusktr@gmail.com>\)/Joe Pea <trusktr@gmail.com>/' | \
		  sort | uniq -c | sed -e 's/^\ *//' | sort -rn | cut -d' ' -f2- \
		  ) > $@.tmp && \
		cmp -s $@ $@.tmp; \
		if test "$(?)" = "0"; then rm -f $@.tmp; touch $@; else mv -f $@.tmp $@; fi \
		|| ( rm -f $@.tmp ; \
		     echo Failed to generate $@ >&2 ); \
	fi


.PHONY: \
  builddirs \
  docs docs-reference \
  coverage valgrind

# make coverage        -- run all checks and generate html coverage report (only availble when built using --enable-coverage)
if USE_LCOV
coverage::
	$(MKDIR_P) ./coverage
	lcov --compat-libtool --directory . --zerocounters
	-$(MAKE) check
	lcov --compat-libtool --directory ./src --capture --output-file ./coverage/$(PACKAGE)_tmp.info
	lcov --compat-libtool --extract ./coverage/$(PACKAGE)_tmp.info "$(PWD)/src*" -o ./coverage/$(PACKAGE).info
	$(RM) ./coverage/$(PACKAGE)_tmp.info
	genhtml -o ./coverage --num-spaces 2 ./coverage/$(PACKAGE).info
endif

# make valgrind        -- run all checks under valgrind
if USE_VALGRIND
valgrind::
	$(MAKE) -C tests valgrind
endif

include $(top_srcdir)/common.mak
